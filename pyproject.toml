[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wowbot"
description = 'Discord bot for playing sounds'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [{ name = "Henry Morley", email = "henry@morley.org.uk" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
dependencies = [
  "py-cord[speed,voice] ~= 2.4",
  "pydantic ~= 2.0",
  "python-dotenv",
  "typer[all] ~= 0.7",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/hrmorley34/wowbot#readme"
Issues = "https://github.com/hrmorley34/wowbot/issues"
Source = "https://github.com/hrmorley34/wowbot"

[project.scripts]
wowbot = "wowbot.discord.bot:main"
wowbot-sounds = "wowbot.model.main:app"

[tool.hatch.version]
path = "src/wowbot/__about__.py"

[tool.hatch.build.targets.sdist]
[tool.hatch.build.targets.wheel]

[tool.hatch.envs.default]
[tool.hatch.envs.default.scripts]
bot = "wowbot"

[tool.hatch.envs.test]
dependencies = ["pytest", "pytest-cov", "pre-commit"]
[tool.hatch.envs.test.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/wowbot --cov=tests"
cov-file = "pytest --cov-report=html --cov-report=xml --cov-config=pyproject.toml --cov=src/wowbot --cov=tests"
no-cov = "cov --no-cov"

[tool.hatch.envs.testall]
template = "test"
[[tool.hatch.envs.testall.matrix]]
python = ["38", "39", "310", "311"]

[tool.hatch.envs.docs]
dependencies = ["sphinx"]
[tool.hatch.envs.docs.scripts]
html = "sphinx-build -M html docs docs/_build"
clean = "sphinx-build -M clean docs docs/_build"

[tool.coverage.run]
branch = true
parallel = true
omit = ["src/wowbot/__about__.py"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "def __modify_schema__\\(",
]

[tool.isort]
profile = "black"
